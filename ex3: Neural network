#Neural network
#Feedforward neural network and prediction
#((5000, 401), (5000, 1))
weight = loadmat("Coursera-ML-AndrewNg-Notes-master\\code\\ex3-neural network\\ex3weights.mat")
theta1, theta2 = weight['Theta1'], weight['Theta2']
theta1.shape, theta2.shape


# insert 常數
X2 = np.matrix(np.insert(data['X'], 0, values=np.ones(X.shape[0]), axis=1))
y2 = np.matrix(data['y'])
X2.shape, y2.shape
# check vector
#(5000, 401)x(401,25)變(5000, 25)
a1 = X2
z2 = a1 * theta1.T
z2.shape

#(5000, 25)
a2 = sigmoid(z2)
a2.shape

#(5000, 25)x(25,10)變(5000, 10)
a2 = np.insert(a2, 0, values=np.ones(a2.shape[0]), axis=1)
z3 = a2 * theta2.T
z3.shape

a3 = sigmoid(z3)
a3

# np.argmax(a,axis=0)是算每列中最大的
# np.argmax(a,axis=1)是算每行中最大的
#(5000, 10)x(10,1)變(5000, 1)
y_pred2 = np.argmax(a3, axis=1) + 1
y_pred2.shape

print(classification_report(y2, y_pred))
